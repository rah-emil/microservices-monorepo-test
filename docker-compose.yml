version: '3.9'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "${ZOOKEEPER_PORT}:2181"
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "${KAFKA_PORT}:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka-network
    volumes:
      - kafka-data:/var/lib/kafka
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server=localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "${KAFKA_UI_PORT}:8080"
    depends_on:
      - kafka
    networks:
      - kafka-network

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  laravel-app:
    build:
      context: .
      dockerfile: ./laravel-app/docker/Dockerfile
    volumes:
      - ./laravel-app/src:/app
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    networks:
      - kafka-network

  nest-app1:
    build:
      context: .
      dockerfile: ./nest-app1/docker/Dockerfile
    volumes:
      - './nest-app1/src/:/app'
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    networks:
      - kafka-network

networks:
  kafka-network:

volumes:
  kafka-data:
  mysql-data:
